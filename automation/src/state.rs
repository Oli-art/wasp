// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use wasmlib::host::*;

use crate::*;
use crate::keys::*;
use crate::types::*;

#[derive(Clone, Copy)]
pub struct ImmutableautomationState {
    pub(crate) id: i32,
}

impl ImmutableautomationState {
    pub fn number_of_tasks(&self) -> ScImmutableInt16 {
        ScImmutableInt16::new(self.id, idx_map(IDX_STATE_NUMBER_OF_TASKS))
    }

    pub fn owner(&self) -> ScImmutableAgentID {
        ScImmutableAgentID::new(self.id, idx_map(IDX_STATE_OWNER))
    }
}

#[derive(Clone, Copy)]
pub struct MutableautomationState {
    pub(crate) id: i32,
}

impl MutableautomationState {
    pub fn number_of_tasks(&self) -> ScMutableInt16 {
        ScMutableInt16::new(self.id, idx_map(IDX_STATE_NUMBER_OF_TASKS))
    }

    pub fn owner(&self) -> ScMutableAgentID {
        ScMutableAgentID::new(self.id, idx_map(IDX_STATE_OWNER))
    }
}
